// Code generated by goa v3.17.2, DO NOT EDIT.
//
// viewcollection HTTP server types
//
// Command:
// $ goa gen github.com/neilogic1911/goaviewcollection/design

package server

import (
	viewcollection "github.com/neilogic1911/goaviewcollection/gen/viewcollection"
	viewcollectionviews "github.com/neilogic1911/goaviewcollection/gen/viewcollection/views"
)

// ElementResultResponseTinyCollection is the type of the "viewcollection"
// service "list_element" endpoint HTTP response body.
type ElementResultResponseTinyCollection []*ElementResultResponseTiny

// ListElementInAttributeResponseBody is the type of the "viewcollection"
// service "list_element_in_attribute" endpoint HTTP response body.
type ListElementInAttributeResponseBody struct {
	Data ElementResultCollectionResponseBody `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// ElementResultResponseTiny is used to define fields on response body types.
type ElementResultResponseTiny struct {
	// ID of the element
	ID int `form:"id" json:"id" xml:"id"`
	// Name of the element
	Name string `form:"name" json:"name" xml:"name"`
}

// ElementResultCollectionResponseBody is used to define fields on response
// body types.
type ElementResultCollectionResponseBody []*ElementResultResponseBody

// ElementResultResponseBody is used to define fields on response body types.
type ElementResultResponseBody struct {
	// ID of the element
	ID int `form:"id" json:"id" xml:"id"`
	// Name of the element
	Name string `form:"name" json:"name" xml:"name"`
	// Description of the element
	Description string `form:"description" json:"description" xml:"description"`
	// Creation time of the element
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
}

// NewElementResultResponseTinyCollection builds the HTTP response body from
// the result of the "list_element" endpoint of the "viewcollection" service.
func NewElementResultResponseTinyCollection(res viewcollectionviews.ElementResultCollectionView) ElementResultResponseTinyCollection {
	body := make([]*ElementResultResponseTiny, len(res))
	for i, val := range res {
		body[i] = marshalViewcollectionviewsElementResultViewToElementResultResponseTiny(val)
	}
	return body
}

// NewListElementInAttributeResponseBody builds the HTTP response body from the
// result of the "list_element_in_attribute" endpoint of the "viewcollection"
// service.
func NewListElementInAttributeResponseBody(res *viewcollection.ListElementInAttributeResult) *ListElementInAttributeResponseBody {
	body := &ListElementInAttributeResponseBody{}
	if res.Data != nil {
		body.Data = make([]*ElementResultResponseBody, len(res.Data))
		for i, val := range res.Data {
			body.Data[i] = marshalViewcollectionElementResultToElementResultResponseBody(val)
		}
	}
	return body
}
